name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  packages: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache cargo registry and build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
      - name: Build release binary
        run: cargo build --release --target x86_64-unknown-linux-gnu
      - name: Rename binary to include architecture
        run: |
          mv target/x86_64-unknown-linux-gnu/release/linux-steam-icon-watcher target/x86_64-unknown-linux-gnu/release/linux-steam-icon-watcher-x86_64
      - name: Upload release binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-steam-icon-watcher-x86_64
          path: target/x86_64-unknown-linux-gnu/release/linux-steam-icon-watcher-x86_64

  changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

  release:
    name: Upload the release
    needs: changelog
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download release binary artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-steam-icon-watcher-x86_64
          path: ./release_bin
      - name: Upload the binary releases
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./release_bin/linux-steam-icon-watcher-x86_64
            CHANGELOG.md
          body: ${{ needs.changelog.outputs.release_body }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
